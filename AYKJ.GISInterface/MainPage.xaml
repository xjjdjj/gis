<UserControl x:Class="AYKJ.GISInterface.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:Symbols="clr-namespace:ESRI.ArcGIS.Client.Symbols;assembly=ESRI.ArcGIS.Client" 
	xmlns:esriConvert="clr-namespace:ESRI.ArcGIS.Client.ValueConverters;assembly=ESRI.ArcGIS.Client"    
    xmlns:esri="http://schemas.esri.com/arcgis/client/2009"
    mc:Ignorable="d"
    d:DesignHeight="300" d:DesignWidth="1400">
    
    <UserControl.Resources>
        <!--专题数据样式-->
        <!--<esriConvert:DictionaryConverter x:Key="dictConverter"/>-->
        <Symbols:MarkerSymbol x:Name="ThematicSymbol" OffsetX="0" OffsetY="0">
            <Symbols:MarkerSymbol.ControlTemplate>
                <ControlTemplate>
                    <Canvas>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard RepeatBehavior="ForEver">
                                        <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="10" Duration="00:00:01" />
                                        <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="10" Duration="00:00:01" />
                                        <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.Opacity)" From="1" To="0" Duration="00:00:01" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse Visibility="{Binding Attributes[StaState]}" 
                                 Height="15" Width="15" Canvas.Left="-7.5" Canvas.Top="-7.5" RenderTransformOrigin="0.5,0.5" x:Name="ellipse" 
                                 IsHitTestVisible="False">
                            <Ellipse.RenderTransform>
                                <ScaleTransform />
                            </Ellipse.RenderTransform>
                            <Ellipse.Fill>
                                <RadialGradientBrush>
                                    <GradientStop Color="#00FF0000" />
                                    <GradientStop Color="#FFFF0000" Offset="0.25" />
                                    <GradientStop Color="#00FF0000" Offset="0.5" />
                                    <GradientStop Color="#FFFF0000" Offset="0.75" />
                                    <GradientStop Color="#00FF0000" Offset="1" />
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse Visibility="{Binding Attributes[StaState]}" 
                                 Height="15" Width="15" Canvas.Left="-7.5" Canvas.Top="-7.5" Fill="#FFFF0000" x:Name="ellipse1" />
                        <StackPanel Visibility="{Binding Path=Attributes[mVisible]}" HorizontalAlignment="Left" VerticalAlignment="Top" Canvas.Top="-9" Canvas.Left="-9">
                            <StackPanel Orientation="Horizontal">
                                <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Image  Loaded="Image_Loaded" Tag="{Binding Attributes[StaTag]}" Cursor="Hand" Source="{Binding Attributes[StaSource]}" HorizontalAlignment="Left" Height="18" Width="18" VerticalAlignment="Center"/>
                                </Grid>
                                <Border x:Name="border" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Top" Background="#FF5591D7">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="3"  HorizontalAlignment="Left" >
                                            <TextBlock TextWrapping="Wrap" Text="{Binding Attributes[StaRemark]}" FontFamily="NSimSun" FontSize="13.333" Margin="3,1,0,1" HorizontalAlignment="Left"/>
                                        </StackPanel>
                                        <!--<StackPanel Orientation="Horizontal" Margin="3,0,3,3" Visibility="{Binding Attributes, ConverterParameter=StaVisibility, Converter={StaticResource dictConverter}}">
                                            <TextBlock TextWrapping="Wrap" Text="{Binding Attributes, ConverterParameter=StaMonitor, Converter={StaticResource dictConverter}}" FontFamily="NSimSun" FontSize="13.333" Margin="3,0,0,0" HorizontalAlignment="Left" d:LayoutOverrides="HorizontalAlignment, HorizontalMargin"/>
                                        </StackPanel>-->
                                    </StackPanel>
                                </Border>
                            </StackPanel>
                        </StackPanel>
                    </Canvas>
                </ControlTemplate>
            </Symbols:MarkerSymbol.ControlTemplate>
        </Symbols:MarkerSymbol>
        <!--定位高亮样式-->
        <Symbols:MarkerSymbol x:Name="HighMarkerStyle">
            <Symbols:MarkerSymbol.ControlTemplate>
                <ControlTemplate>
                    <Canvas>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard RepeatBehavior="ForEver">
                                        <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="10" Duration="00:00:01" />
                                        <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="10" Duration="00:00:01" />
                                        <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.Opacity)" From="1" To="0" Duration="00:00:01" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse Height="10" Width="10" Canvas.Left="-5" Canvas.Top="-5" RenderTransformOrigin="0.5,0.5" x:Name="ellipse" IsHitTestVisible="False">
                            <Ellipse.RenderTransform>
                                <ScaleTransform />
                            </Ellipse.RenderTransform>
                            <Ellipse.Fill>
                                <RadialGradientBrush>
                                    <GradientStop Color="#0000FF00" />
                                    <GradientStop Color="#FF00FF00" Offset="0.25" />
                                    <GradientStop Color="#0000FF00" Offset="0.5" />
                                    <GradientStop Color="#FF00FF00" Offset="0.75" />
                                    <GradientStop Color="#0000FF00" Offset="1" />
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <!--<Ellipse Height="10" Width="10" Canvas.Left="-5" Canvas.Top="-5" Fill="#FF00FF00" x:Name="ellipse1" />-->
                    </Canvas>
                </ControlTemplate>
            </Symbols:MarkerSymbol.ControlTemplate>
        </Symbols:MarkerSymbol>
        <!--infoWindow样式-->
        <Style x:Key="ButtonInfoStyle" TargetType="Button">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="FontFamily" Value="NSimSun"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="10.667"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Margin="0">
                            <VisualStateManager.CustomVisualStateManager>
                                <ei:ExtendedVisualStateManager/>
                            </VisualStateManager.CustomVisualStateManager>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CircleEase EasingMode="EaseInOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                        <VisualTransition From="Checked" GeneratedDuration="0:0:0.5" To="Unchecked"/>
                                        <VisualTransition GeneratedDuration="0:0:0.5" To="Unchecked"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedStyle" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverStyle">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.5">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CircleEase EasingMode="EaseInOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                        <VisualTransition From="Normal" GeneratedDuration="0:0:0.5" To="MouseOver"/>
                                        <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.5" To="Normal"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverStyle" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalStyle" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedStyle" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalStyle" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverStyle" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedStyle" d:IsOptimized="True"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedStyle">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">

                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalStyle" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverStyle" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedStyle" d:IsOptimized="True"/>
                                        </Storyboard>

                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="NormalStyle" BorderBrush="#FF02204F" BorderThickness="1" Margin="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                        <GradientStop Color="#FF00328C" Offset="0"/>
                                        <GradientStop Color="#FF82BEFF" Offset="1"/>
                                        <GradientStop Color="#FF000014"/>
                                        <GradientStop Color="#FF00328C" Offset="0.15"/>
                                        <GradientStop Color="#FF0A46A0" Offset="0.93"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border x:Name="MouseOverStyle"  BorderThickness="1" BorderBrush="Black">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                        <GradientStop Color="#FF00145A" Offset="0"/>
                                        <GradientStop Color="#FF6BADF9" Offset="1"/>
                                        <GradientStop Color="#FF003278" Offset="0.06"/>
                                        <GradientStop Color="#FF0A468C" Offset="0.97"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border x:Name="PressedStyle" BorderThickness="1" Opacity="0" BorderBrush="Black">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                        <GradientStop Color="#FF00145A" Offset="0"/>
                                        <GradientStop Color="#FF6BADF9" Offset="1"/>
                                        <GradientStop Color="#FF003278" Offset="0.06"/>
                                        <GradientStop Color="#FF0A468C" Offset="0.97"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border x:Name="CheckedStyle" BorderThickness="1" Opacity="0" BorderBrush="Black">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                        <GradientStop Color="#FF00145A" Offset="0"/>
                                        <GradientStop Color="#FF6BADF9" Offset="1"/>
                                        <GradientStop Color="#FF003278" Offset="0.06"/>
                                        <GradientStop Color="#FF0A468C" Offset="0.97"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <TextBlock x:Name="textBlock" Margin="0" TextWrapping="Wrap" Text="{Binding Content, ElementName=contentPresenter}" d:LayoutOverrides="Width, Height" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" FontFamily="NSimSun" FontSize="13.333"/>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" d:LayoutOverrides="Width, Height" Content="{TemplateBinding Content}" OpacityMask="White" Visibility="Collapsed"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CloseBtnStyle" TargetType="Button">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.3"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="#FF18425F" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="path"  Data="M 1117.79,1948.35L 1150.1,1980.66L 1105.27,2025.49L 1150.1,2070.32L 1117.79,2102.63L 1072.96,2057.8L 1028.13,2102.63L 995.821,2070.32L 1040.65,2025.49L 995.821,1980.66L 1028.13,1948.35L 1072.96,1993.18L 1117.79,1948.35 Z " Fill="#FF18425F" Stretch="Fill" Stroke="#FF000000" StrokeThickness="0" StrokeLineJoin="Round" UseLayoutRounding="False"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle Fill="Transparent" Stroke="Transparent" StrokeThickness="0.1" StrokeLineJoin="Round"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="InfoWindowStyle1" TargetType="esri:InfoWindow">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="esri:InfoWindow">
                        <Grid x:Name="Root" RenderTransformOrigin="{Binding RenderTransformOrigin, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Bottom">
                            <Grid.RenderTransform>
                                <ScaleTransform ScaleY="0" ScaleX="0"/>
                            </Grid.RenderTransform>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Show">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="Root">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <BackEase Amplitude=".5" EasingMode="EaseOut"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="Root">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <BackEase Amplitude=".5" EasingMode="EaseOut"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Hide">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="Root">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <CircleEase EasingMode="EaseIn"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="Root">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <CircleEase EasingMode="EaseIn"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="BorderPath" Stroke="{TemplateBinding BorderBrush}" StrokeLineJoin="Round" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0" StrokeThickness="0"/>
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" VerticalAlignment="Bottom"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    
    <Grid x:Name="LayoutRoot">
        <Grid.Resources>
            <DataTemplate x:Key="InfoWindowSelectTemplate">
                <Grid Height="135" Width="114" Margin="0,0,0,-12">
                    <Path Width="114" Height="135" Canvas.Left="112.646" Canvas.Top="-56.9375" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FF001953" Fill="#FF4E8FD5" Data="F1 M 117.146,-56.4375L 223.146,-56.4375C 225.355,-56.4375 227.146,-54.6466 227.146,-52.4375L 227.146,65.5625C 227.146,67.7717 225.355,69.5625 223.146,69.5625L 174.079,69.5625L 170,80.167L 165.921,69.5625L 117.146,69.5625C 114.937,69.5625 113.146,67.7717 113.146,65.5625L 113.146,-52.4375C 113.146,-54.6466 114.937,-56.4375 117.146,-56.4375 Z "/>
                    <StackPanel Background="#FF005399" Height="113" Width="103" VerticalAlignment="Top" Margin="0,5,0,0">
                        <Button Content="" Tag="{Binding [dataClose]}" Width="10" Height="10" Click="tpl_btnClose_Click" Margin="0,2,5,0" HorizontalAlignment="Right" VerticalContentAlignment="Top" Foreground="#FFF20C0C" Background="#FFF80A0A"  ToolTipService.ToolTip="关闭" Style="{StaticResource CloseBtnStyle}" VerticalAlignment="Top" Cursor="Hand"/>
                        <Button Content="详细信息" Tag="{Binding [dataInfo]}" Click="tpl_btnDetail_Click" Margin="3" ToolTipService.ToolTip="查看该点的详细信息" Style="{StaticResource ButtonInfoStyle}" Width="88" Height="27" FontSize="12" FontWeight="Normal" Cursor="Hand"/>
                        <Button Content="实时视频监控" Tag="{Binding [dataInfo]}" Click="tpl_btnRealVideo_Click" Margin="3" ToolTipService.ToolTip="查看该点的视频监控" Style="{StaticResource ButtonInfoStyle}" Width="88" Height="27" FontSize="12" FontWeight="Normal" Cursor="Hand"/>
                        <Button Content="实时数据监测" Tag="{Binding [dataInfo]}" Click="tpl_btnRealData_Click"  Margin="3" ToolTipService.ToolTip="查看该点的数据监测" Style="{StaticResource ButtonInfoStyle}" Width="88" Height="27" FontSize="12" FontWeight="Normal" Cursor="Hand"/>
                    </StackPanel>
                </Grid>
            </DataTemplate>
        </Grid.Resources>
        
    </Grid>
</UserControl>

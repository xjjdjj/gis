//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace AYKJ.GISDevelop.AykjRealData {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/AYKJ.GISDevelop.RealDataWCF")]
    public partial class CompositeType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool BoolValueField;
        
        private string StringValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Silverlight", ConfigurationName="AykjRealData.IService1", CallbackContract=typeof(AYKJ.GISDevelop.AykjRealData.IService1Callback))]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="Silverlight/IService1/GetContrastData", ReplyAction="Silverlight/IService1/GetContrastDataResponse")]
        System.IAsyncResult BeginGetContrastData(System.AsyncCallback callback, object asyncState);
        
        string EndGetContrastData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="Silverlight/IService1/GetData", ReplyAction="Silverlight/IService1/GetDataResponse")]
        System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState);
        
        string EndGetData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="Silverlight/IService1/GetDataUsingDataContract", ReplyAction="Silverlight/IService1/GetDataUsingDataContractResponse")]
        System.IAsyncResult BeginGetDataUsingDataContract(AYKJ.GISDevelop.AykjRealData.CompositeType composite, System.AsyncCallback callback, object asyncState);
        
        AYKJ.GISDevelop.AykjRealData.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="Silverlight/IService1/GetRealData", ReplyAction="Silverlight/IService1/GetRealDataResponse")]
        System.IAsyncResult BeginGetRealData(System.AsyncCallback callback, object asyncState);
        
        string EndGetRealData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="Silverlight/IService1/GetNewData", ReplyAction="Silverlight/IService1/GetNewDataResponse")]
        System.IAsyncResult BeginGetNewData(System.AsyncCallback callback, object asyncState);
        
        void EndGetNewData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="Silverlight/IService1/StopTimer", ReplyAction="Silverlight/IService1/StopTimerResponse")]
        System.IAsyncResult BeginStopTimer(string st, System.AsyncCallback callback, object asyncState);
        
        void EndStopTimer(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Callback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="Silverlight/IService1/ReceiveMessages")]
        void ReceiveMessages(string FullIds);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : AYKJ.GISDevelop.AykjRealData.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContrastDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetContrastDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AYKJ.GISDevelop.AykjRealData.CompositeType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((AYKJ.GISDevelop.AykjRealData.CompositeType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRealDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRealDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.DuplexClientBase<AYKJ.GISDevelop.AykjRealData.IService1>, AYKJ.GISDevelop.AykjRealData.IService1 {
        
        private BeginOperationDelegate onBeginGetContrastDataDelegate;
        
        private EndOperationDelegate onEndGetContrastDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetContrastDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataDelegate;
        
        private EndOperationDelegate onEndGetDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataUsingDataContractDelegate;
        
        private EndOperationDelegate onEndGetDataUsingDataContractDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataUsingDataContractCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRealDataDelegate;
        
        private EndOperationDelegate onEndGetRealDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetRealDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewDataDelegate;
        
        private EndOperationDelegate onEndGetNewDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginStopTimerDelegate;
        
        private EndOperationDelegate onEndStopTimerDelegate;
        
        private System.Threading.SendOrPostCallback onStopTimerCompletedDelegate;
        
        private bool useGeneratedCallback;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public Service1Client(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public Service1Client(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                this(new Service1ClientCallback(), endpointConfigurationName) {
        }
        
        private Service1Client(Service1ClientCallback callbackImpl, string endpointConfigurationName) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl), endpointConfigurationName) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new Service1ClientCallback(), binding, remoteAddress) {
        }
        
        private Service1Client(Service1ClientCallback callbackImpl, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl), binding, remoteAddress) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public Service1Client() : 
                this(new Service1ClientCallback()) {
        }
        
        private Service1Client(Service1ClientCallback callbackImpl) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl)) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetContrastDataCompletedEventArgs> GetContrastDataCompleted;
        
        public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;
        
        public event System.EventHandler<GetDataUsingDataContractCompletedEventArgs> GetDataUsingDataContractCompleted;
        
        public event System.EventHandler<GetRealDataCompletedEventArgs> GetRealDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetNewDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StopTimerCompleted;
        
        public event System.EventHandler<ReceiveMessagesReceivedEventArgs> ReceiveMessagesReceived;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AYKJ.GISDevelop.AykjRealData.IService1.BeginGetContrastData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetContrastData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AYKJ.GISDevelop.AykjRealData.IService1.EndGetContrastData(System.IAsyncResult result) {
            return base.Channel.EndGetContrastData(result);
        }
        
        private System.IAsyncResult OnBeginGetContrastData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((AYKJ.GISDevelop.AykjRealData.IService1)(this)).BeginGetContrastData(callback, asyncState);
        }
        
        private object[] OnEndGetContrastData(System.IAsyncResult result) {
            string retVal = ((AYKJ.GISDevelop.AykjRealData.IService1)(this)).EndGetContrastData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetContrastDataCompleted(object state) {
            if ((this.GetContrastDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContrastDataCompleted(this, new GetContrastDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetContrastDataAsync() {
            this.GetContrastDataAsync(null);
        }
        
        public void GetContrastDataAsync(object userState) {
            if ((this.onBeginGetContrastDataDelegate == null)) {
                this.onBeginGetContrastDataDelegate = new BeginOperationDelegate(this.OnBeginGetContrastData);
            }
            if ((this.onEndGetContrastDataDelegate == null)) {
                this.onEndGetContrastDataDelegate = new EndOperationDelegate(this.OnEndGetContrastData);
            }
            if ((this.onGetContrastDataCompletedDelegate == null)) {
                this.onGetContrastDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContrastDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetContrastDataDelegate, null, this.onEndGetContrastDataDelegate, this.onGetContrastDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AYKJ.GISDevelop.AykjRealData.IService1.BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AYKJ.GISDevelop.AykjRealData.IService1.EndGetData(System.IAsyncResult result) {
            return base.Channel.EndGetData(result);
        }
        
        private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            int value = ((int)(inValues[0]));
            return ((AYKJ.GISDevelop.AykjRealData.IService1)(this)).BeginGetData(value, callback, asyncState);
        }
        
        private object[] OnEndGetData(System.IAsyncResult result) {
            string retVal = ((AYKJ.GISDevelop.AykjRealData.IService1)(this)).EndGetData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataCompleted(object state) {
            if ((this.GetDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataAsync(int value) {
            this.GetDataAsync(value, null);
        }
        
        public void GetDataAsync(int value, object userState) {
            if ((this.onBeginGetDataDelegate == null)) {
                this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
            }
            if ((this.onEndGetDataDelegate == null)) {
                this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
            }
            if ((this.onGetDataCompletedDelegate == null)) {
                this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataDelegate, new object[] {
                        value}, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AYKJ.GISDevelop.AykjRealData.IService1.BeginGetDataUsingDataContract(AYKJ.GISDevelop.AykjRealData.CompositeType composite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AYKJ.GISDevelop.AykjRealData.CompositeType AYKJ.GISDevelop.AykjRealData.IService1.EndGetDataUsingDataContract(System.IAsyncResult result) {
            return base.Channel.EndGetDataUsingDataContract(result);
        }
        
        private System.IAsyncResult OnBeginGetDataUsingDataContract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            AYKJ.GISDevelop.AykjRealData.CompositeType composite = ((AYKJ.GISDevelop.AykjRealData.CompositeType)(inValues[0]));
            return ((AYKJ.GISDevelop.AykjRealData.IService1)(this)).BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        private object[] OnEndGetDataUsingDataContract(System.IAsyncResult result) {
            AYKJ.GISDevelop.AykjRealData.CompositeType retVal = ((AYKJ.GISDevelop.AykjRealData.IService1)(this)).EndGetDataUsingDataContract(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataUsingDataContractCompleted(object state) {
            if ((this.GetDataUsingDataContractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataUsingDataContractAsync(AYKJ.GISDevelop.AykjRealData.CompositeType composite) {
            this.GetDataUsingDataContractAsync(composite, null);
        }
        
        public void GetDataUsingDataContractAsync(AYKJ.GISDevelop.AykjRealData.CompositeType composite, object userState) {
            if ((this.onBeginGetDataUsingDataContractDelegate == null)) {
                this.onBeginGetDataUsingDataContractDelegate = new BeginOperationDelegate(this.OnBeginGetDataUsingDataContract);
            }
            if ((this.onEndGetDataUsingDataContractDelegate == null)) {
                this.onEndGetDataUsingDataContractDelegate = new EndOperationDelegate(this.OnEndGetDataUsingDataContract);
            }
            if ((this.onGetDataUsingDataContractCompletedDelegate == null)) {
                this.onGetDataUsingDataContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataUsingDataContractDelegate, new object[] {
                        composite}, this.onEndGetDataUsingDataContractDelegate, this.onGetDataUsingDataContractCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AYKJ.GISDevelop.AykjRealData.IService1.BeginGetRealData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRealData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string AYKJ.GISDevelop.AykjRealData.IService1.EndGetRealData(System.IAsyncResult result) {
            return base.Channel.EndGetRealData(result);
        }
        
        private System.IAsyncResult OnBeginGetRealData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((AYKJ.GISDevelop.AykjRealData.IService1)(this)).BeginGetRealData(callback, asyncState);
        }
        
        private object[] OnEndGetRealData(System.IAsyncResult result) {
            string retVal = ((AYKJ.GISDevelop.AykjRealData.IService1)(this)).EndGetRealData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRealDataCompleted(object state) {
            if ((this.GetRealDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRealDataCompleted(this, new GetRealDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRealDataAsync() {
            this.GetRealDataAsync(null);
        }
        
        public void GetRealDataAsync(object userState) {
            if ((this.onBeginGetRealDataDelegate == null)) {
                this.onBeginGetRealDataDelegate = new BeginOperationDelegate(this.OnBeginGetRealData);
            }
            if ((this.onEndGetRealDataDelegate == null)) {
                this.onEndGetRealDataDelegate = new EndOperationDelegate(this.OnEndGetRealData);
            }
            if ((this.onGetRealDataCompletedDelegate == null)) {
                this.onGetRealDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRealDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetRealDataDelegate, null, this.onEndGetRealDataDelegate, this.onGetRealDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AYKJ.GISDevelop.AykjRealData.IService1.BeginGetNewData(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNewData(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void AYKJ.GISDevelop.AykjRealData.IService1.EndGetNewData(System.IAsyncResult result) {
            base.Channel.EndGetNewData(result);
        }
        
        private System.IAsyncResult OnBeginGetNewData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((AYKJ.GISDevelop.AykjRealData.IService1)(this)).BeginGetNewData(callback, asyncState);
        }
        
        private object[] OnEndGetNewData(System.IAsyncResult result) {
            ((AYKJ.GISDevelop.AykjRealData.IService1)(this)).EndGetNewData(result);
            return null;
        }
        
        private void OnGetNewDataCompleted(object state) {
            if ((this.GetNewDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewDataAsync() {
            this.GetNewDataAsync(null);
        }
        
        public void GetNewDataAsync(object userState) {
            if ((this.onBeginGetNewDataDelegate == null)) {
                this.onBeginGetNewDataDelegate = new BeginOperationDelegate(this.OnBeginGetNewData);
            }
            if ((this.onEndGetNewDataDelegate == null)) {
                this.onEndGetNewDataDelegate = new EndOperationDelegate(this.OnEndGetNewData);
            }
            if ((this.onGetNewDataCompletedDelegate == null)) {
                this.onGetNewDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewDataDelegate, null, this.onEndGetNewDataDelegate, this.onGetNewDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult AYKJ.GISDevelop.AykjRealData.IService1.BeginStopTimer(string st, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStopTimer(st, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void AYKJ.GISDevelop.AykjRealData.IService1.EndStopTimer(System.IAsyncResult result) {
            base.Channel.EndStopTimer(result);
        }
        
        private System.IAsyncResult OnBeginStopTimer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            string st = ((string)(inValues[0]));
            return ((AYKJ.GISDevelop.AykjRealData.IService1)(this)).BeginStopTimer(st, callback, asyncState);
        }
        
        private object[] OnEndStopTimer(System.IAsyncResult result) {
            ((AYKJ.GISDevelop.AykjRealData.IService1)(this)).EndStopTimer(result);
            return null;
        }
        
        private void OnStopTimerCompleted(object state) {
            if ((this.StopTimerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StopTimerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StopTimerAsync(string st) {
            this.StopTimerAsync(st, null);
        }
        
        public void StopTimerAsync(string st, object userState) {
            if ((this.onBeginStopTimerDelegate == null)) {
                this.onBeginStopTimerDelegate = new BeginOperationDelegate(this.OnBeginStopTimer);
            }
            if ((this.onEndStopTimerDelegate == null)) {
                this.onEndStopTimerDelegate = new EndOperationDelegate(this.OnEndStopTimer);
            }
            if ((this.onStopTimerCompletedDelegate == null)) {
                this.onStopTimerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStopTimerCompleted);
            }
            base.InvokeAsync(this.onBeginStopTimerDelegate, new object[] {
                        st}, this.onEndStopTimerDelegate, this.onStopTimerCompletedDelegate, userState);
        }
        
        private void OnReceiveMessagesReceived(object state) {
            if ((this.ReceiveMessagesReceived != null)) {
                object[] results = ((object[])(state));
                this.ReceiveMessagesReceived(this, new ReceiveMessagesReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void VerifyCallbackEvents() {
            if (((this.useGeneratedCallback != true) 
                        && (this.ReceiveMessagesReceived != null))) {
                throw new System.InvalidOperationException("指定了回调 InstanceContext 时无法使用回调事件。请选择是指定回调 InstanceContext 还是订阅回调事件。");
            }
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override AYKJ.GISDevelop.AykjRealData.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientCallback : object, IService1Callback {
            
            private Service1Client proxy;
            
            public void Initialize(Service1Client proxy) {
                this.proxy = proxy;
            }
            
            public void ReceiveMessages(string FullIds) {
                this.proxy.OnReceiveMessagesReceived(new object[] {
                            FullIds});
            }
        }
        
        private class Service1ClientChannel : ChannelBase<AYKJ.GISDevelop.AykjRealData.IService1>, AYKJ.GISDevelop.AykjRealData.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.DuplexClientBase<AYKJ.GISDevelop.AykjRealData.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetContrastData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetContrastData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetContrastData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetContrastData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = value;
                System.IAsyncResult _result = base.BeginInvoke("GetData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDataUsingDataContract(AYKJ.GISDevelop.AykjRealData.CompositeType composite, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = composite;
                System.IAsyncResult _result = base.BeginInvoke("GetDataUsingDataContract", _args, callback, asyncState);
                return _result;
            }
            
            public AYKJ.GISDevelop.AykjRealData.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result) {
                object[] _args = new object[0];
                AYKJ.GISDevelop.AykjRealData.CompositeType _result = ((AYKJ.GISDevelop.AykjRealData.CompositeType)(base.EndInvoke("GetDataUsingDataContract", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRealData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetRealData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetRealData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetRealData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNewData(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetNewData", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetNewData(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetNewData", _args, result);
            }
            
            public System.IAsyncResult BeginStopTimer(string st, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = st;
                System.IAsyncResult _result = base.BeginInvoke("StopTimer", _args, callback, asyncState);
                return _result;
            }
            
            public void EndStopTimer(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("StopTimer", _args, result);
            }
        }
    }
    
    public class ReceiveMessagesReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReceiveMessagesReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string FullIds {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

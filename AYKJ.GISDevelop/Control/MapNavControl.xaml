<navigation:Page x:Class="AYKJ.GISDevelop.Control.MapNavControl" 
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:esriClient="clr-namespace:ESRI.ArcGIS.Client;assembly=ESRI.ArcGIS.Client"
           xmlns:esri="http://schemas.esri.com/arcgis/client/2009"
           xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
           xmlns:Symbols="clr-namespace:ESRI.ArcGIS.Client.Symbols;assembly=ESRI.ArcGIS.Client"
           xmlns:System="clr-namespace:System;assembly=mscorlib" 
           xmlns:esriConvert="clr-namespace:ESRI.ArcGIS.Client.ValueConverters;assembly=ESRI.ArcGIS.Client"
           mc:Ignorable="d"
           xmlns:navigation="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Navigation"
           d:DesignWidth="640" d:DesignHeight="480"
           Title="南京安元科技GIS平台">
    <UserControl.Resources>
        <!--<esriConvert:DictionaryConverter x:Key="dictConverter"/>-->
        <!--专题数据样式-->
        <Symbols:MarkerSymbol x:Name="ThematicSymbol" OffsetX="0" OffsetY="0">
            <Symbols:MarkerSymbol.ControlTemplate>
                <ControlTemplate>
                    <Canvas>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal">
                                    <Storyboard RepeatBehavior="ForEver">
                                        <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="10" Duration="00:00:01" />
                                        <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="10" Duration="00:00:01" />
                                        <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.Opacity)" From="1" To="0" Duration="00:00:01" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Ellipse Visibility="{Binding Path=Attributes[StaState]}" 
                                 Height="15" Width="15" Canvas.Left="-7.5" Canvas.Top="-7.5" RenderTransformOrigin="0.5,0.5" x:Name="ellipse" 
                                 IsHitTestVisible="False">
                            <Ellipse.RenderTransform>
                                <ScaleTransform />
                            </Ellipse.RenderTransform>
                            <Ellipse.Fill>
                                <RadialGradientBrush>
                                    <GradientStop Color="#00FF0000" />
                                    <GradientStop Color="#FFFF0000" Offset="0.25" />
                                    <GradientStop Color="#00FF0000" Offset="0.5" />
                                    <GradientStop Color="#FFFF0000" Offset="0.75" />
                                    <GradientStop Color="#00FF0000" Offset="1" />
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse Visibility="{Binding Path=Attributes[StaState]}" 
                                 Height="15" Width="15" Canvas.Left="-7.5" Canvas.Top="-7.5" Fill="#FFFF0000" x:Name="ellipse1" />
                        <StackPanel Visibility="{Binding Path=Attributes[mVisible]}" HorizontalAlignment="Left" VerticalAlignment="Top" Canvas.Top="-9" Canvas.Left="-9">
                            <StackPanel Orientation="Horizontal">
                                <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Button Height="18" Tag="{Binding Path=Attributes[StaTag]}" Width="18" Click="theme_btn_click" MouseLeave="Button_MouseLeave" MouseEnter="Button_MouseEnter">
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Image Loaded="Image_Loaded" Unloaded="Image_Unloaded" Tag="{Binding Path=Attributes[StaTag]}" Cursor="Hand" Source="{Binding Path=Attributes[StaSource]}" HorizontalAlignment="Left" Height="18" Width="18" VerticalAlignment="Center"/>
                                            </ControlTemplate>
                                        </Button.Template>
                                        <!--<Button.Content>
                                            
                                        </Button.Content>-->
                                    </Button>                                    
                                </Grid>
                                <Border x:Name="border" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Top" Background="#FF5591D7">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="3"  HorizontalAlignment="Left" >
                                            <TextBlock TextWrapping="Wrap" Text="{Binding Attributes[StaRemark]}" FontFamily="NSimSun" FontSize="13.333" Margin="3,1,0,1" HorizontalAlignment="Left"/>
                                        </StackPanel>
                                        <!--<StackPanel Orientation="Horizontal" Margin="3,0,3,3" Visibility="{Binding Attributes, ConverterParameter=StaVisibility, Converter={StaticResource dictConverter}}">
                                            <TextBlock TextWrapping="Wrap" Text="{Binding Attributes, ConverterParameter=StaMonitor, Converter={StaticResource dictConverter}}" FontFamily="NSimSun" FontSize="13.333" Margin="3,0,0,0" HorizontalAlignment="Left" d:LayoutOverrides="HorizontalAlignment, HorizontalMargin"/>
                                        </StackPanel>-->
                                    </StackPanel>
                                </Border>
                            </StackPanel>
                        </StackPanel>
                    </Canvas>
                </ControlTemplate>
            </Symbols:MarkerSymbol.ControlTemplate>
        </Symbols:MarkerSymbol>

        <!--重大危险源-专题数据样式20150422(雷远亮要求)-->
        <Symbols:MarkerSymbol x:Name="ThematicSymbol_WXY" OffsetX="0" OffsetY="0">
            <Symbols:MarkerSymbol.ControlTemplate>
                <ControlTemplate>
                    <Canvas>
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal">
                                    <Storyboard RepeatBehavior="ForEver">
                                        <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="10" Duration="00:00:01" />
                                        <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="10" Duration="00:00:01" />
                                        <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.Opacity)" From="1" To="0" Duration="00:00:01" />
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Ellipse Visibility="Visible" 
                                 Height="10" Width="10" Canvas.Left="-7.5" Canvas.Top="-7.5" RenderTransformOrigin="0.5,0.5" x:Name="ellipse" 
                                 IsHitTestVisible="False">
                            <Ellipse.RenderTransform>
                                <ScaleTransform />
                            </Ellipse.RenderTransform>
                            <Ellipse.Fill>
                                <RadialGradientBrush>
                                    <GradientStop Color="#00FF7F00" />
                                    <GradientStop Color="#FFFF7F00" Offset="0.25" />
                                    <GradientStop Color="#00FF7F00" Offset="0.5" />
                                    <GradientStop Color="#FFFF7F00" Offset="0.75" />
                                    <GradientStop Color="#00FF7F00" Offset="1" />
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse Visibility="{Binding Path=Attributes[StaState]}" 
                                 Height="15" Width="15" Canvas.Left="-7.5" Canvas.Top="-7.5" Fill="#FFFF0000" x:Name="ellipse1" />
                        <StackPanel Visibility="{Binding Path=Attributes[mVisible]}" HorizontalAlignment="Left" VerticalAlignment="Top" Canvas.Top="-9" Canvas.Left="-9">
                            <StackPanel Orientation="Horizontal">
                                <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Button Height="18" Tag="{Binding Path=Attributes[StaTag]}" Width="18" Click="theme_btn_click" MouseLeave="Button_MouseLeave" MouseEnter="Button_MouseEnter">
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Image Loaded="Image_Loaded" Unloaded="Image_Unloaded" Tag="{Binding Path=Attributes[StaTag]}" Cursor="Hand" Source="{Binding Path=Attributes[StaSource]}" HorizontalAlignment="Left" Height="18" Width="18" VerticalAlignment="Center"/>
                                            </ControlTemplate>
                                        </Button.Template>
                                        <!--<Button.Content>
                                            
                                        </Button.Content>-->
                                    </Button>
                                </Grid>
                                <Border x:Name="border" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Top" Background="#FF5591D7">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="3"  HorizontalAlignment="Left" >
                                            <TextBlock TextWrapping="Wrap" Text="{Binding Attributes[StaRemark]}" FontFamily="NSimSun" FontSize="13.333" Margin="3,1,0,1" HorizontalAlignment="Left"/>
                                        </StackPanel>
                                        <!--<StackPanel Orientation="Horizontal" Margin="3,0,3,3" Visibility="{Binding Attributes, ConverterParameter=StaVisibility, Converter={StaticResource dictConverter}}">
                                            <TextBlock TextWrapping="Wrap" Text="{Binding Attributes, ConverterParameter=StaMonitor, Converter={StaticResource dictConverter}}" FontFamily="NSimSun" FontSize="13.333" Margin="3,0,0,0" HorizontalAlignment="Left" d:LayoutOverrides="HorizontalAlignment, HorizontalMargin"/>
                                        </StackPanel>-->
                                    </StackPanel>
                                </Border>
                            </StackPanel>
                        </StackPanel>
                    </Canvas>
                </ControlTemplate>
            </Symbols:MarkerSymbol.ControlTemplate>
        </Symbols:MarkerSymbol>

        <!--定位高亮样式-->
        <Symbols:MarkerSymbol x:Name="HighMarkerStyle">
            <Symbols:MarkerSymbol.ControlTemplate>
                <ControlTemplate>
                    <Canvas>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard RepeatBehavior="ForEver">
                                        <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="10" Duration="00:00:01" />
                                        <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="10" Duration="00:00:01" />
                                        <DoubleAnimation BeginTime="0" Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.Opacity)" From="1" To="0" Duration="00:00:01" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse Height="10" Width="10" Canvas.Left="-5" Canvas.Top="-5" RenderTransformOrigin="0.5,0.5" x:Name="ellipse" IsHitTestVisible="False">
                            <Ellipse.RenderTransform>
                                <ScaleTransform />
                            </Ellipse.RenderTransform>
                            <Ellipse.Fill>
                                <RadialGradientBrush>
                                    <GradientStop Color="#0000FF00" />
                                    <GradientStop Color="#FF00FF00" Offset="0.25" />
                                    <GradientStop Color="#0000FF00" Offset="0.5" />
                                    <GradientStop Color="#FF00FF00" Offset="0.75" />
                                    <GradientStop Color="#0000FF00" Offset="1" />
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <!--<Ellipse Height="10" Width="10" Canvas.Left="-5" Canvas.Top="-5" Fill="#FF00FF00" x:Name="ellipse1" />-->
                    </Canvas>
                </ControlTemplate>
            </Symbols:MarkerSymbol.ControlTemplate>
        </Symbols:MarkerSymbol>
        <!--详细信息相关style-->
        <Style x:Name="TipHelp_xx" TargetType="ToolTip">
            <Setter Property="Background" Value="Green"/>
            <Setter Property="Padding" Value="3,0,3,0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid >
                            <Path Width="9.20004" Height="6.26776" Stretch="Fill" Fill="Black" Data="F1 M 392.135,224.917L 382.948,218.667L 382.935,224.934L 392.135,224.917 Z " HorizontalAlignment="Left" VerticalAlignment="Top" Margin="9.75,0,0,0" UseLayoutRounding="False"/>
                            <Border BorderBrush="Black" BorderThickness="1" Margin="0,6,0,0" Background="Black" Height="20" >
                                <TextBlock TextWrapping="Wrap" Text="查看详细" FontFamily="NSimsun" FontSize="12" Foreground="White" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Name="TipHelp_sp" TargetType="ToolTip">
            <Setter Property="Background" Value="Green"/>
            <Setter Property="Padding" Value="3,0,3,0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid >
                            <Path Width="9.20004" Height="6.26776" Stretch="Fill" Fill="Black" Data="F1 M 392.135,224.917L 382.948,218.667L 382.935,224.934L 392.135,224.917 Z " HorizontalAlignment="Left" VerticalAlignment="Top" Margin="9.75,0,0,0" UseLayoutRounding="False"/>
                            <Border BorderBrush="Black" BorderThickness="1" Margin="0,6,0,0" Background="Black" Height="20" >
                                <TextBlock TextWrapping="Wrap" Text="查看视频和模拟量" FontFamily="NSimsun" FontSize="12" Foreground="White" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Name="TipHelp_pmt" TargetType="ToolTip">
            <Setter Property="Background" Value="Green"/>
            <Setter Property="Padding" Value="3,0,3,0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid >
                            <Path Width="9.20004" Height="6.26776" Stretch="Fill" Fill="Black" Data="F1 M 392.135,224.917L 382.948,218.667L 382.935,224.934L 392.135,224.917 Z " HorizontalAlignment="Left" VerticalAlignment="Top" Margin="9.75,0,0,0" UseLayoutRounding="False"/>
                            <Border BorderBrush="Black" BorderThickness="1" Margin="0,6,0,0" Background="Black" Height="20" >
                                <TextBlock TextWrapping="Wrap" Text="查看平面图" FontFamily="NSimsun" FontSize="12" Foreground="White" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Name="TipHelp_jy" TargetType="ToolTip">
            <Setter Property="Background" Value="Green"/>
            <Setter Property="Padding" Value="3,0,3,0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid >
                            <Path Width="9.20004" Height="6.26776" Stretch="Fill" Fill="Black" Data="F1 M 392.135,224.917L 382.948,218.667L 382.935,224.934L 392.135,224.917 Z " HorizontalAlignment="Left" VerticalAlignment="Top" Margin="9.75,0,0,0" UseLayoutRounding="False"/>
                            <Border BorderBrush="Black" BorderThickness="1" Margin="0,6,0,0" Background="Black" Height="20" >
                                <TextBlock TextWrapping="Wrap" Text="查看模拟量" FontFamily="NSimsun" FontSize="12" Foreground="White" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyle_xx" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="#00000000">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Normal" GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                        <VisualTransition From="Normal" GeneratedDuration="0:0:0.1" To="Pressed">
                                            <Storyboard/>
                                        </VisualTransition>
                                        <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Pressed">
                                            <Storyboard/>
                                        </VisualTransition>
                                        <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal">
                                            <Storyboard/>
                                        </VisualTransition>
                                        <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="Normal">
                                            <Storyboard/>
                                        </VisualTransition>
                                        <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver">
                                            <Storyboard/>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Disabled"/>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="#FFA4DAFF" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="path" Data="M 291.083,161C 308.526,161 322.667,175.141 322.667,192.583C 322.667,210.026 308.526,224.167 291.083,224.167C 273.64,224.167 259.5,210.026 259.5,192.583C 259.5,175.141 273.64,161 291.083,161 Z M 287.112,176.5C 293.433,176.5 298.558,181.624 298.558,187.946C 298.558,194.267 293.433,199.391 287.112,199.391C 280.791,199.391 275.667,194.267 275.667,187.946C 275.667,181.624 280.791,176.5 287.112,176.5 Z M 295.774,195.853L 308.667,207.279" Stretch="Fill" Stroke="#FFC1E6FF" StrokeThickness="3" StrokeLineJoin="Round"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle_close" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="#00000000">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Normal" GeneratedDuration="0:0:0.3" To="MouseOver"/>
                                        <VisualTransition From="Normal" GeneratedDuration="0:0:0.3" To="Pressed"/>
                                        <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3" To="Normal"/>
                                        <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3" To="Pressed"/>
                                        <VisualTransition From="Pressed" GeneratedDuration="0:0:0.3" To="Normal"/>
                                        <VisualTransition From="Pressed" GeneratedDuration="0:0:0.3" To="MouseOver"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Disabled"/>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.4" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="#FFC1E6FF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="#FFC1E6FF" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="path" Canvas.Left="528.831" Canvas.Top="350.831" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FFC1E6FF" Fill="#FFC1E6FF" Data="M 547.665,351.331C 557.791,351.331 566,359.539 566,369.665C 566,379.791 557.791,388 547.665,388C 537.539,388 529.331,379.791 529.331,369.665C 529.331,359.539 537.539,351.331 547.665,351.331 Z M 547.604,353.857C 538.828,353.857 531.714,360.971 531.714,369.747C 531.714,378.523 538.828,385.637 547.604,385.637C 556.38,385.637 563.494,378.523 563.494,369.747C 563.494,360.971 556.38,353.857 547.604,353.857 Z M 540.425,374.391L 545.013,369.803L 540.415,365.204L 543.405,362.214L 548.003,366.813L 552.573,362.244L 555.563,365.234L 550.993,369.803L 555.552,374.361L 552.562,377.351L 548.003,372.793L 543.416,377.381L 540.425,374.391 Z " UseLayoutRounding="False" d:LayoutOverrides="Margin" Opacity="0.4"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle_JY" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="#00000000">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Normal" GeneratedDuration="0:0:0.1" To="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.1" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" d:IsOptimized="True"/>
                                                <ColorAnimation Duration="0:0:0.1" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                                <ColorAnimation Duration="0:0:0.1" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1" d:IsOptimized="True"/>
                                                <ColorAnimation Duration="0:0:0.1" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path2" d:IsOptimized="True"/>
                                                <ColorAnimation Duration="0:0:0.1" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path3" d:IsOptimized="True"/>
                                                <ColorAnimation Duration="0:0:0.1" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path4" d:IsOptimized="True"/>
                                                <ColorAnimation Duration="0:0:0.1" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path5" d:IsOptimized="True"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Normal" GeneratedDuration="0:0:0.1" To="Pressed">
                                            <Storyboard/>
                                        </VisualTransition>
                                        <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Pressed">
                                            <Storyboard/>
                                        </VisualTransition>
                                        <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal">
                                            <Storyboard/>
                                        </VisualTransition>
                                        <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="Normal">
                                            <Storyboard/>
                                        </VisualTransition>
                                        <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver">
                                            <Storyboard/>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Disabled"/>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path2" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path3" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path4" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path5" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path2" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path3" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path4" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path5" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path1" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path2" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path3" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path4" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path5" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                            <Ellipse x:Name="ellipse" Stroke="#FFA1D0EA" StrokeLineJoin="Round" StrokeThickness="3"/>
                            <Path x:Name="path" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FFA1D0EA" Fill="#FFA1D0EA" Data="M 328.161,-21.5649C 328.161,-12.5889 320.884,-5.31154 311.909,-5.31154C 302.933,-5.31154 295.656,-12.5889 295.656,-21.5649C 295.656,-30.5396 302.933,-37.8156 311.909,-37.8156C 320.884,-37.8156 328.161,-30.5396 328.161,-21.5649 Z " UseLayoutRounding="False" Margin="7.727,0,0,7.403" Height="4.115" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="4.041"/>
                            <Path x:Name="path1" Stretch="Fill" StrokeLineJoin="Round" Stroke="#FFA1D0EA" Fill="#FFA1D0EA" Data="F1 M 418.313,-21.5649C 418.313,-12.5889 411.035,-5.31154 402.06,-5.31154C 393.083,-5.31154 385.807,-12.5889 385.807,-21.5649C 385.807,-30.5396 393.083,-37.8156 402.06,-37.8156C 411.035,-37.8156 418.313,-30.5396 418.313,-21.5649 Z " UseLayoutRounding="False" Margin="0,0,7.183,7.403" Height="4.115" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="4.045"/>
                            <Path x:Name="path2" Stretch="Fill" StrokeMiterLimit="2.75" Stroke="#FFA1D0EA" Data="M 428.43,-36.9438C 428.43,-33.9238 425.982,-31.4758 422.963,-31.4758L 313.65,-31.4758C 310.631,-31.4758 308.183,-33.9238 308.183,-36.9438L 308.183,-99.7971C 308.183,-102.816 310.631,-105.264 313.65,-105.264L 422.963,-105.264C 425.982,-105.264 428.43,-102.816 428.43,-99.7971L 428.43,-36.9438 Z " UseLayoutRounding="False" Margin="8.137,8.953,4.827,9.574" StrokeThickness="2"/>
                            <Path x:Name="path3" Stretch="Fill" StrokeMiterLimit="2.75" Stroke="#FFA1D0EA" Data="M 308.452,-48.4255C 308.452,-39.8936 309.152,-33.2549 306.818,-33.2549L 285.096,-34.1229C 282.763,-34.1229 278.09,-39.0282 278.09,-47.5616L 278.09,-60.8789L 278.09,-75.4069C 278.09,-83.9389 291.052,-94.0869 293.387,-94.0869L 307.522,-94.2469C 307.522,-94.2469 307.987,-88.4362 307.987,-79.9029L 308.452,-48.4255 Z " UseLayoutRounding="False" Margin="4.457,10.299,0,9.723" HorizontalAlignment="Left" Width="6.005" StrokeThickness="2"/>
                            <Path x:Name="path4" Stretch="Fill" StrokeMiterLimit="2.75" Stroke="#FFA1D0EA" Data="M 383.422,-74.8878L 407.289,-74.8878M 395.357,-89.7628L 395.357,-60.0135" UseLayoutRounding="False" Margin="0,11.196,7.768,13.442" HorizontalAlignment="Right" Width="4.536"/>
                            <Path x:Name="path5" Height="2.116" Stretch="Fill" StrokeMiterLimit="2.75" Stroke="#FFA1D0EA" Data="F1 M 292.268,-95.8989C 290.159,-95.8722 288.435,-97.0629 288.415,-98.5562L 288.307,-107.038C 288.288,-108.534 289.983,-109.767 292.092,-109.794L 296.483,-109.85C 298.592,-109.878 300.318,-108.687 300.336,-107.191L 300.444,-98.7108C 300.463,-97.2149 298.768,-95.9829 296.659,-95.9549L 292.268,-95.8989 Z " UseLayoutRounding="False" Margin="6.398,9.069,0,0" VerticalAlignment="Top" StrokeThickness="0.5" HorizontalAlignment="Left" Width="1.838"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle_SP" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="#00000000">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Normal" GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                        <VisualTransition From="Normal" GeneratedDuration="0:0:0.1" To="Pressed"/>
                                        <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Pressed">
                                            <Storyboard/>
                                        </VisualTransition>
                                        <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
                                        <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="Normal">
                                            <Storyboard/>
                                        </VisualTransition>
                                        <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Disabled"/>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path2" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path2" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path1" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path2" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                            <Ellipse x:Name="ellipse" Stroke="#FFA1D0EA" StrokeMiterLimit="2.75" StrokeThickness="3"/>
                            <Path x:Name="path" Stretch="Fill" StrokeMiterLimit="2.75" Stroke="#FFA1D0EA" Data="F1 M 192.667,114.499C 192.667,157.393 157.895,192.165 115,192.165C 72.1067,192.165 37.3334,157.393 37.3334,114.499C 37.3334,71.6053 72.1067,36.832 115,36.832C 157.895,36.832 192.667,71.6053 192.667,114.499 Z " Margin="7.376,3.998,8.373,11.75" UseLayoutRounding="False" StrokeThickness="4"/>
                            <Path x:Name="path1" Height="4.892" Stretch="Fill" StrokeMiterLimit="2.75" Stroke="#FFA1D0EA" Data="F1 M 179.667,238C 179.667,246.469 173.609,253.333 166.137,253.333L 73.196,253.333C 65.724,253.333 59.6667,246.469 59.6667,238C 59.6667,229.531 65.724,222.667 73.196,222.667L 166.137,222.667C 173.609,222.667 179.667,229.531 179.667,238 Z " Margin="7.686,0,8.566,5.701" UseLayoutRounding="False" VerticalAlignment="Bottom"/>
                            <Rectangle x:Name="rectangle" Height="3" Stretch="Fill" StrokeMiterLimit="2.75" Stroke="#FFA1D0EA" Margin="12,0,13,10" VerticalAlignment="Bottom"/>
                            <Path x:Name="path3" Width="8.107" Height="5.528" Stretch="Fill" Data="F1 M 149.667,189.333C 149.667,189.333 196.333,186 195.667,198C 195,210 187,222.667 205.667,226.667C 224.333,230.667 241,224.667 225,244.667" HorizontalAlignment="Right" Margin="0,0,4.806,7.446" UseLayoutRounding="False" VerticalAlignment="Bottom" Stroke="{x:Null}"/>
                            <Path x:Name="path2" Width="8.636" Height="6.057" Stretch="Fill" StrokeMiterLimit="2.75" Stroke="#FFA1D0EA" Data="F1 M 149.667,189.333C 149.667,189.333 196.333,186 195.667,198C 195,210 187,222.667 205.667,226.667C 224.333,230.667 241,224.667 225,244.667" HorizontalAlignment="Right" Margin="0,0,4.32,7.21" UseLayoutRounding="False" VerticalAlignment="Bottom" StrokeThickness="0.5"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle_PMT" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="#00000000">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Normal" GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                        <VisualTransition From="Normal" GeneratedDuration="0:0:0.1" To="Pressed">
                                            <Storyboard/>
                                        </VisualTransition>
                                        <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Pressed">
                                            <Storyboard/>
                                        </VisualTransition>
                                        <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal">
                                            <Storyboard/>
                                        </VisualTransition>
                                        <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="Normal">
                                            <Storyboard/>
                                        </VisualTransition>
                                        <VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver">
                                            <Storyboard/>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Disabled"/>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path1" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="0.7" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content=""/>
                            <Ellipse x:Name="ellipse" Stroke="#FFA1D0EA" StrokeThickness="3" StrokeLineJoin="Round"/>
                            <Rectangle x:Name="rectangle" Stretch="Fill" StrokeMiterLimit="2.75" Stroke="#FFA1D0EA" Margin="6,9"/>
                            <Path x:Name="path" Stretch="Fill" StrokeThickness="0.333333" StrokeMiterLimit="2.75" Stroke="#FFA1D0EA" Fill="#FFA1D0EA" Data="F1 M 115.096,126.521C 115.096,140.079 104.105,151.069 90.5478,151.069C 76.9904,151.069 65.9998,140.079 65.9998,126.521C 65.9998,112.963 76.9904,101.973 90.5478,101.973C 104.105,101.973 115.096,112.963 115.096,126.521 Z " Margin="9.307,14.98,0,11.332" UseLayoutRounding="False" HorizontalAlignment="Left" Width="3.688"/>
                            <Path x:Name="path1" Stretch="Fill" StrokeThickness="0.333333" StrokeMiterLimit="2.75" Stroke="#FFA1D0EA" Fill="#FFA1D0EA" Data="F1 M 124.265,144.361L 174.333,57.6393L 224.401,144.361L 124.265,144.361 Z " Margin="14.403,12.186,8.101,11.318" UseLayoutRounding="False"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--企业详细信息样式-->
        <Symbols:MarkerSymbol x:Name="BusinessSymbol" OffsetX="120" OffsetY="206">
            <Symbols:MarkerSymbol.ControlTemplate>
                <ControlTemplate>
                    <Grid Height="215" Width="305">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid HorizontalAlignment="Left" Height="18" VerticalAlignment="Bottom" Width="18" Margin="151,0,0,0">
                            <Ellipse Height="0" Width="0" RenderTransformOrigin="0.5,0.5" x:Name="ellipse" IsHitTestVisible="False" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" d:LayoutOverrides="Width">
                                <Ellipse.RenderTransform>
                                    <ScaleTransform />
                                </Ellipse.RenderTransform>
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#0000FF00" />
                                        <GradientStop Color="#FF00FF00" Offset="0.25" />
                                        <GradientStop Color="#0000FF00" Offset="0.5" />
                                        <GradientStop Color="#FF00FF00" Offset="0.75" />
                                        <GradientStop Color="#0000FF00" Offset="1" />
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <!--<Image Source="{Binding Attributes[WxySource]}"/>-->

                        </Grid>
                        <Image x:Name="image" Margin="0" Source="/Image/ToolTipImage.png" Stretch="None" VerticalAlignment="Top" d:IsLocked="True"/>

                        <Grid x:Name="grid" Width="287" Height="196" VerticalAlignment="Top" HorizontalAlignment="Right">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="28"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid Margin="0">
                                <TextBlock x:Name="txt_cnname" Margin="10,7,0,0" VerticalAlignment="Top" d:LayoutOverrides="Width" FontFamily="NSimSun" FontSize="16" Foreground="Black" HorizontalAlignment="Left" FontStretch="UltraExpanded" TextOptions.TextHintingMode="Animated" TextTrimming="WordEllipsis" MaxWidth="200" Text="{Binding Path=Attributes[StaName]}" FontWeight="Bold">
                                    <TextBlock.Effect>
                                        <DropShadowEffect ShadowDepth="1" BlurRadius="3" Color="#FF747272"/>
                                    </TextBlock.Effect>
                                </TextBlock>
                                <Button x:Name="btn_gra_close" Click="btn_gra_close_Click" Content="Button" Cursor="Hand" HorizontalAlignment="Right" Height="16" Margin="0,0,10,0" Style="{StaticResource ButtonStyle_close}" VerticalAlignment="Center" Width="16"/>
                            </Grid>
                            <Grid Margin="0" Grid.Row="1" >
                                <StackPanel VerticalAlignment="Top" Height="102" Margin="10,8,10,0">
                                    <Grid>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Text="单位名称：" FontFamily="NSimSun" FontSize="12" Foreground="#FFC1E6FF"/>

                                            <TextBlock TextWrapping="Wrap" Text="{Binding Attributes[StaName]}" FontFamily="NSimSun" FontSize="12" Foreground="#FFC1E6FF" MaxWidth="210"/>
                                        </StackPanel>
                                    </Grid>
                                    <Grid VerticalAlignment="Top" Margin="0,5,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Text="地    址：" FontFamily="NSimSun" FontSize="12" Foreground="#FFC1E6FF"/>
                                            <TextBlock TextWrapping="Wrap" Text="{Binding Attributes[StaAddress]}" FontFamily="NSimSun" FontSize="12" Foreground="#FFC1E6FF" MaxWidth="210"/>
                                        </StackPanel>
                                    </Grid>
                                    <Grid Margin="0,5,0,0">
                                        <StackPanel Orientation="Horizontal" Margin="0">
                                            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Text="法人代表：" FontFamily="NSimSun" FontSize="12" Foreground="#FFC1E6FF"/>
                                            <TextBlock Text="{Binding Attributes[StaPerson]}" FontFamily="NSimSun" FontSize="12" Foreground="#FFC1E6FF" TextWrapping="Wrap" MaxWidth="210"/>
                                        </StackPanel>
                                    </Grid>
                                    <Grid Margin="0,5,0,0" VerticalAlignment="Top" Visibility="{Binding Attributes[IsRace]}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" Text="联系电话：" FontFamily="NSimSun" FontSize="12" Foreground="#FFC1E6FF"/>
                                            <TextBlock TextWrapping="Wrap" Text="{Binding Attributes[StaPhone]}" FontFamily="NSimSun" FontSize="12" Foreground="#FFC1E6FF" MaxWidth="210"/>
                                        </StackPanel>
                                    </Grid>
                                </StackPanel>
                                <Grid x:Name="imggrid"  Visibility="Collapsed" HorizontalAlignment="Right" Height="140" VerticalAlignment="Top" Width="190" Margin="0,7,5,0">
                                    <Border BorderBrush="Black" BorderThickness="1" Margin="0">
                                        <Image Source="{Binding Attributes[PmtSource]}" Stretch="Fill"/>
                                    </Border>
                                </Grid>
                                <Button Content="" Click="btn_XX_Click" HorizontalAlignment="Left" Height="30" Margin="10,0,0,22" Style="{StaticResource ButtonStyle_xx}" VerticalAlignment="Bottom" Width="30" Cursor="Hand" FontFamily="NSimSun">
                                    <ToolTipService.ToolTip>
                                        <ToolTip Style="{StaticResource TipHelp_xx}" />
                                    </ToolTipService.ToolTip>
                                </Button>
                                <Button Content="" Visibility="{Binding Path=Attributes[IsPmtShow]}" Click="btn_PMT_Click"  HorizontalAlignment="Left" Height="30" Margin="50,0,0,22" Style="{StaticResource ButtonStyle_PMT}" VerticalAlignment="Bottom" Width="30" Cursor="Hand" FontFamily="NSimSun">
                                    <ToolTipService.ToolTip>
                                        <ToolTip Style="{StaticResource TipHelp_pmt}" />
                                    </ToolTipService.ToolTip>
                                </Button>
                                <Button Content="" Visibility="Collapsed"  Click="btn_MNL_Click" HorizontalAlignment="Left" Height="30" Margin="90,0,0,22" Style="{StaticResource ButtonStyle_JY}" VerticalAlignment="Bottom" Width="30" Cursor="Hand" FontFamily="NSimSun">
                                    <ToolTipService.ToolTip>
                                        <ToolTip Style="{StaticResource TipHelp_jy}" />
                                    </ToolTipService.ToolTip>
                                </Button>
                                <Button Content="" Visibility="{Binding Path=Attributes[IsVideoShow]}" Tag="{Binding Path=Attributes[MediaSource]}"  Click="btn_SP_Click" HorizontalAlignment="Left" Height="30" Margin="90,0,0,22" Style="{StaticResource ButtonStyle_SP}" VerticalAlignment="Bottom" Width="30" Cursor="Hand" FontFamily="NSimSun">
                                    <ToolTipService.ToolTip>
                                        <ToolTip Style="{StaticResource TipHelp_sp}" />
                                    </ToolTipService.ToolTip>
                                </Button>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Symbols:MarkerSymbol.ControlTemplate>
        </Symbols:MarkerSymbol>
        
        <ControlTemplate x:Key="ValidationToolTipTemplate">
            <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="xform" X="-25"/>
                </Grid.RenderTransform>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="OpenStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0"/>
                            <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                        <DoubleAnimation.EasingFunction>
                                            <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                </Storyboard>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Closed">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform"/>
                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
                <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
                <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
                <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
                <Border Background="#FFDC000C" CornerRadius="2"/>
                <Border CornerRadius="2">
                    <TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
                </Border>
            </Grid>
        </ControlTemplate>
        <Style TargetType="CheckBox" x:Key="CheckBoxStyle">
            <Setter Property="Background" Value="#FF448DCA"/>
            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Padding" Value="4,1,0,0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.3"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Thickness>0</Thickness>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BoxMiddleBackground"/>
                                            <ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                            <ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                            <ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MoveIcon" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="#003E4C2D" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="MoveIcon" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BoxMiddleBackground"/>
                                            <ColorAnimation Duration="0" To="#6BFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                            <ColorAnimation Duration="0" To="#C6FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                            <ColorAnimation Duration="0" To="#EAFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                            <ColorAnimation Duration="0" To="#F4FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                            <ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                            <ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                            <ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                            <ColorAnimation Duration="0" To="#FF6DBDD1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BoxMiddle"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MoveIcon" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="#FF3E4C2D" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="MoveIcon" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                            <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.3"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateIcon"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentFocusVisualElement"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid"/>
                                    <VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <System:Boolean>True</System:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0">
                                <Rectangle x:Name="Background" Height="12" Margin="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Width="12"/>
                                <Rectangle x:Name="BackgroundOverlay" Fill="#00C4DBEE" Height="12" Margin="1" Opacity="0" RadiusY="1" RadiusX="1" Stroke="#00000000" StrokeThickness="1" Width="12"/>
                                <Rectangle x:Name="BoxMiddleBackground" Fill="{TemplateBinding Background}" Height="10" RadiusY="1" RadiusX="1" Stroke="#00000000" StrokeThickness="1" Width="10" Visibility="Collapsed"/>
                                <Rectangle x:Name="BoxMiddle" Height="10" RadiusY="1" RadiusX="1" StrokeThickness="1" Width="10" Visibility="Collapsed">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.64,0.88" StartPoint="0.62,0.15">
                                            <GradientStop Color="#FFFFFFFF" Offset="0.013"/>
                                            <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                            <GradientStop Color="#EAFFFFFF" Offset="0.603"/>
                                            <GradientStop Color="#D8FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                    <Rectangle.Stroke>
                                        <LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
                                            <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                            <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                                            <GradientStop Color="#FFFFFFFF" Offset="0.375"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Stroke>
                                </Rectangle>
                                <Rectangle x:Name="BoxMiddleLine" Height="10" Opacity=".2" RadiusY="1" RadiusX="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" Width="10" Visibility="Collapsed"/>
                                <Path x:Name="MoveIcon" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" Fill="#FFE1E78F" FlowDirection="LeftToRight" Height="10" Margin="0" Opacity="0" Stretch="Fill" Width="10.5" UseLayoutRounding="False" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Path x:Name="CheckIcon" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" Fill="#FFE1E78F" FlowDirection="LeftToRight" Height="10" Margin="0" Opacity="0" Stretch="Fill" Width="10.5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <Rectangle x:Name="IndeterminateIcon" Fill="#FF333333" Height="2" Opacity="0" Width="6"/>
                                <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" Height="14" Opacity="0" RadiusY="1" RadiusX="1" Width="14"/>
                                <Rectangle x:Name="ContentFocusVisualElement" Height="14" IsHitTestVisible="false" Stroke="#FFE1E7DB" StrokeThickness="1" Width="14"/>
                                <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Margin="1" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                            <ToolTip.Triggers>
                                                <EventTrigger RoutedEvent="Canvas.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <System:Boolean>true</System:Boolean>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ToolTip.Triggers>
                                        </ToolTip>
                                    </ToolTipService.ToolTip>
                                    <Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                                        <Path Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="#FFDC000C" Margin="0,3,0,0"/>
                                        <Path Data="M 0,0 L2,0 L 7,5 L7,7" Fill="#ffffff" Margin="0,3,0,0"/>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot">

    </Grid>
</navigation:Page>
